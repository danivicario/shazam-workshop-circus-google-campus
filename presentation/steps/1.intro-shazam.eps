%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1395.000000 1020.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.5 (Build 18F132) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1395 1020
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1395 1020
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: MyriadPro-BoldCond
%!FontType1-1.0: MyriadPro-BoldCond 2.000%%CreationDate: 7/6/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (2.000) readonly def/FullName (Myriad Pro Bold Condensed) readonly def/FamilyName (Myriad Pro) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /MyriadPro-BoldCond def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /D putdup 34 /V putdup 35 /I putdup 36 /C putdup 37 /A putdup 38 /R putdup 39 /O putdup 40 /period putdup 41 /E putdup 42 /S putdup 43 /N putdup 44 /T putdup 45 /H putdup 46 /M putdup 47 /L putdup 48 /space putdup 49 /five putdup 50 /three putdup 51 /J putdup 52 /P putdup 53 /G putdup 54 /U putreadonly def/FontBBox {-150 -250 970 958} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF2E3C14A4A25ABB6822897674CC24BD7FFCD7B108877DB3F1D60870130F06D65FF41BB421B87F002FA0FB189A37316987F0990A1C3972A61734C28FF77B8EE2D1673598432792DD3DAC56ED3D16A0AA678C4646CA5AF43C1B5A4A01D495E992608BB2F3502DEB68A4C08B734CCBB2BB571EFF67BC464E71364BCC108D1E2BEDD6B7842479844EEC18418A20A9FB2B6314EA509FF62CADCEE2DD5E9AF35F793525664B427D5294C6B5B7959F6716E7A6354EFDCC70BE4A707F9D6F81DA2B1F59C41ED99D517E6457630D6CA8AC5EE09701FF4E28779F691CD84DA369F25506682C53D15E17F9B81031F5FC8C04EEF8BE47B38C6B0995E5A44B848547BC2BEAB09A175CCB14583204A2E2910A080DB1A11B5836654B7913718BF190E539A67E8B8FE229F9CEF6692F89A0FE6C18DD7BDEC2BB929BDCC1B480A3BEFD47DBA64213E74F0D31AA5B41CAEE10CDB906FFCE3AF181C2F216F75474A23AA2693E4438927E49747E7F162870A2B928C777C0E68BCA07A58D77AAAC1AE446319F8CEB4637D08BD211EA7C084280EE1520CEFBA73297804C4A91A1DF4FD2A18AAC2D739EA2E904ECA37C39057908E7B0F5CB3126A5B3416B543F03EBD6146BC6A306BDA7586AE9C9C56CA461DB5F0275F99224DFF9A315EBD76308BEBDD7F22D631F9D9C1D145CACD6BB26B0E4CEBD571F0AC6D6432CD3640C9E8E20EE35A6F080220F4875D51D6ECAB80B93FC4E2C205FB0BCE46B64B877AA6139529E977DF2C44B3097046DD5318CC1E30FB5BA7949244F779D05F282A8026D25B544A68D515E90E877C64E812C8BC5D2ECD11FAB768F76A7BB57348778CFB6B8486C70182117FA2BCE8F5C2B324FBF652269070657565A93E39CF66AAA855AE5DDE97772AA0ACFEE84BCA4257526C85FCEA6DEC4FAE7D6AECEBE3FC66B3AF3FBB98BBB0C09D0F9F1EE4A9E5D4EB35F8DC759C544BE973DC14F55667DFFE2FD9469B175D70C4A3B876ABF173430BB1E601EC009FBCE43CC613903C0328C2A5CDF3F2F51E0639810FC199DEF9469CDD47E14FC190D8221C233D614D6B98D8AACF293FE83948D8239E830551186118B8FDAACCAA5B947D904410962F6533C1AA49920D6C1D600F95B86D904F21B55D71E3AB21FE8A8944BBF347B8D944BFAB741AD6812BA6AD7F5504E0835F1BA80863ED65BE706897F2677AC0E5882AE2FB65A646D87BBD1E9EE30307434EF8911B6161DDC05BAF0C1182D76816425C7DF225CA6E8A42D74B4F9A39578301532BE6DAC7D7B5C2C2AE1B984B854F888A9CBC6B8DA3A3B4835269F9322DA73229593639A30EB1376BF28106A5D39456036D4EF5F89B899A1B213D1B9155D4B8FA9FEA95A6199F76D4B31393183C308684EC47576589362E67D8BC8CEE403D768E4451F948F44FB76D49E3E99779810CABCDF45FF30D0D07DB5601638F6D84EA68186FFF5E7692655C22FBD21505DC2BC1206C3B35D7FFF18B5BD813E0D10E3A28D68F050C15C9E7C00D3DCC31A517041C2C37908D22E3E80C817EAC238F860F345571F7D33B923C8E9E492604A5702B8B70E8351E6D91EB1BB10788E22CB767A86DCCE382A73534BFED21E1C5B246FEA03C8A2A87BB94F62AF74FB838892650074851BA65826CD60216CC8E4E9C03420DEB1CCEE617884757A4D1F124977743A190C88D8A9BC172679484F2B1757867C6FBF69D98344F414FC7192B374F0890F7F2D2E9587F0653215B91436D23B782BF2EF1A352074FB753EA1B3BDF8F8AC164A187E6E68A076EA1DA140D710A5916E18DBC68A680EBEF75C95B27BFB0E5B32063855AE3551594A646CABCB2B54FBE145C719CEF9D3362C93B332E95F2D0A89D2DF4343300F07EE4A484C6F3B970C247CFAC5B0A9AD0F32082544C5444CE580F5A6103078925AA9FB243FEC443DD2F007D76A25B2A7244FBB5E6D9252EEAF633CCB2F1D47E235FD37BF67E87E1D8273192EB30E4D4CE523108980BAA513EA364C84CB4DC8C88325296370B8CFF264A3C8E1591B04E1E365F24B3C3BF6C5BF55E30A3F31361ECB6B84F3EECD6D83B6911A81AEAF37D28350D55C93C15B27C8E96BE755C4F620D4F451C3728AA644CB09A6A1E036FBECC431DD24BE425139C03CAAECB2793825037EC3E8D96727A746D55C4BF6F60C44B97464DE6050F7E73B3C9FE2724F6784A872CA9A0E473D4C8F75F96B9C61AEE45679315DA4893A50D89C58B5D7CEB8CC19A806354D9E5F12ED94BF15749011F20443F4A35A9C778C15C52B5818A869EB4EC3B27CDABC16E20A6557E480C6933CFE95B7A7C5CFDF299E94F842A7A3A550C7105B6443324BB595D0738DB03FF2E20B2EF4DB1459520265CC715DECEE667BDFF5A0A58C902E05201AEECE210B1381325D5E87E0387203348DA52451987690B5484E2E34E46DD162912F09F42B9E2AADC607C0CB8B947A0A0E29677CC3839E4F9714F571DF2CF3666EFDAE36D0529342C7B3969F0FD32A0891D6A2D5518E38D8306DCF0E1900D394CD92C78A45D9BFBE0A7FF1F45A3C94EE755923A8082670F04589E32A8B6BA2DE17C96FF2162AA969C281DA83248FE571D3D49E4F4077F42786B040E0CD06DD8E85F1499A36282A120D7A1EDA2693D893C3A6C1A7243189F1EB3EEABB9BFFD40E96BB94D915C0EEF03621240BCE1BF7406C7897176713062014A5B723DEF018162E18A0F63CE06C99741DEC3B2721EBA499C0E27C9A7759D84CB64A05473544C4678F98B440614CAC94846A9C7525D2B1DBA2D6A072467F298E6322169D57E0E1DD2F0264376B8B5D2265490AFE80E02E20773F3A780A694D754C8EA38C16A0DC701A71BD29F25A0CBD8ABDABDF5513C256BB41062B11D082F2F02CF3C87AEA177F83EDE0EFD6D0F3A3411892678F0D491508510CD6BD720A8C19C8B60AB0B9F38C49648140BCF18C3667B3B987DC832B4550040B83394BC639543DE7F29D420AB6C27E14CF0BC786849C0479A4411E918B6CF5F8B17C46F272249BE072F36B688590CDB51DE0A7E2BDDA8A6A89A0AF79139B1E65EBDCCD991848AC797402995210B585D369577B16D96B89309A5A997C1DA6C6D8C9B9DEFD645152E3A00D649C5FE26CCEAB52C7FD59C240BD5B947DEAC1FCCF503F43C396CD880ECBFCAC489D3C6B5EEF57A1F932FF8DB95BF40297A0E99FDCC899FAF069465E2190B99F21C0DAEFA5E69D5AB3DFA31414F521679F8B125505034804635D3E683A182752B144C698AA1008FFC1F35CD3176EA9F7458D959B5A30AF1CB7A231DE5B2404E514D1C662CB82D7FA798E6EDF009F82E8A37BA77C64235799782C8C6A261FD3386AC6D3BD7A4BD1CBA23843906381DD76955C213EC7E527010FD864634836CA328A7BE308105BEF2FC05A3270055FD6F9CBD759AF95486BDCE72D8B65F85C3D8D33DFC96C5A403C22E796F6CE22C3BB80C073EF3C07E142A4F38FC953AEC9F1EE5EBCF4805339A7F13385A19C3006DECE671AFA1F8D3278A5B40909E481684B60D0D3ABC41D495EC2EEDF8F6A8EA831081ED80B2541C35CBBEB5800F0EBA74CABD9D5924115DED96A61F362FBCB01FB24E4E613A781D1B129D90A56E51F2DBEC96323DC2920C2CBB977D83ED12570897D2A8DBEB72F084CE052240971B0CE97CBB81C96746BBBC758C52DDD0CB67AB5A72B33D90C4EF726F159A303DC868BE6FEF9E29356AD75003577357C97D6B88B2D7487BB1FC378C593B28C3CB31AC8ED51483E948DA0B1B310646A2E533363A924B29F46AC8706A399FECEADFCBAE2AFB07900D877639927BE45B3A1F2B4691CBCD27C96336722D3AF0F74902BB26E9CB53799456CB4152037140E89B65192D380647BBDA6C4EF90E3CCB03D805B43CE40954EF6ED222FCC4165A84ED180EA202E42A26D48FAE5D21470BE799C783BDBD425ED17B1514EB2CE6AE0134B01291E99183F6FA9505C4398A220147695F59E15A5BD0B29285F1B1C7A1012730F60F52C2BE523DFF30459A165E8984C13FA1139F30926B884D3A81BEC50381DAA29BD44FF2EC45808AD6F64AADC7ED7EB6189E80C043DE996D9BE8062946D87C21CF1F526629333AC5AC7D230110B963636042CA70A6EEEB8494B00B0177EF7AB2C6A9FDD77B9E433E5B14A408027B64AC940A26A68B2CA3B869F372E437CB0F5EA73A1B0A9B03420977EC221A90CCECB6AA658B5272AE5096F76D63549258BAE2FE66AE464E80DF9A0C2E0FE7934B4C0FD05691C19833B6A2B8C437E945D024F8BF9F9FF32AB25ABD17C869800C68E77EB6B70325EE0E65F52EC478069B06E92A6FA32224A1563EBD4EAC131C76BA6D41881C5911A5B5DB5DFAD659126DBDAFC5D65577C043D9A5D0C0C1A295EEB06FA8D455AE77ED09D4E8BA5EC59F74740B175239F929978593DF941F4D16B4218781EF5FE5EDDD573C250B1AD76C063443A7A3E41315E7B1CFE32BDE1B1C2A2ADDE8A608F42220BE2C4B4B7F65EF0569F264BA9967AB446E0866D966793237A9BDDFAA413F736FBC6DF3D87B9DB7656D1AB5FBF71E8044792DFDE8DEC0F31C8A8E6D2AFC8CC05B6D4306587D2E2BFAE0A89B8370187945061AA9C9867A8C835066A8711AE45C49CAB249BE98F0000F05370E68B5A05CF4D903EF2E796205C13CF680BA6937BFD1B8312D7DA1B83840E6C6BB12E015BB327E3D5FAFBF6F4193F1D34CE7B00270E845749DFE01CDEF802FD51B7EF31C084FA20AD8461B09DA8D832ACC016BF8E679520312FC8298C713F7E03DEA4B84253840F2C3FE1BBFB845EC0D3253288A3644204EC7164AFCFB69F1A1D482FA994DDE70092023F4F4B41AB884E627A6F23FFFEA21AEB837E9AEC5A3D68CC5AA912FF85DE88F891E4650A6C823B65CEA3B3165A8E218EC97ACF2877A31F8F954CBE17764EBED26D2CBA5C09045FA1C3394BEC8A89916CFC80213188AD10E500F0CE1DCDC187E51F0B293EDA252F0A8B5C328E8D5D588ACEB595043C0701C9B644F26339CAAA9CB09E871A3FADF327DDB2D1D3EFBBA5344CC3059D407BEDD8936FA200A5D4583E8F2B10CC04F4647C1B67F893EEFA4FE2FFCCBE3D465EB679F68905AA6FB27C99628EBC19B89E42642853F5DBBEA78C2D5CEECB281295C3177942331615ABA6880B44EADEF4040957CA83428395F79ADD0768E0266E3D5E09B32ACB2FB9882A268B9DB9338D0B62879C406A70C2CCE3A1B8FAE9530036B3931D57ED739C64DA3873B2CDEAAE5CC96A706B8EE0B7F148C906FCEA233BBB22B192209F58AC6A8A42F4EC4AC342AD5B2ABEBD451067729E041A61FE911E5047721E0EC3DE49E971C184A201DE83D74F5C0D927A8C6FC4CBB9C805DEABEDEFF64F736D826CD0E97D943927AD7B39BC97E9DBE30C9C87A623F5ED8798B60AEB2B3A67A30B1A0C9D86DF802884DCCF7778125C301644C7E041F7C95097B99E0E9C01D6A3D0C2CF0846B48423D95D4C2D1E664F0FDF8A30F946BACB55F837FC4FB81F9A9E5A5EDAF7B1074675F69F61D6D9EF80CD325EA3300586838FE7C695F1B589D2301A61FAC298CC43081B2FAC139F1F8CE65AADED57B49B3A8382B6DE18B5A5D0F94CF30FF663C3397F3BFC1CF14DB89B8C0E4C99359C07A12E6ABEEA4D56415B24CC733E01295E5A72F199EFF674297363D4BBD570710E9584EB8ECD86043E259A2F6FA9E23472376E8A4AD3D95CC4E9C45ED7850707B506532C70EFF11C56D1FE1A7B74F5098C05957DEC9A3AA227379C027617F1834B3A502531B44CF9FD956729AFB50C7BFE7C068F2E2178CBE9B7BAF4A7F8BE0235B67B3D31C0B9559A54EC27497BA45ABE1DF83BA9BCFA01E107D3C252BB03CC4BF69ED58177780E90F23A60D4D8ACAB7198636E56EDCA6036A1E1535143E53A918CA6741614FDB7D9EB32322510751E52A848883B59AA64A9725D410C03A375319D79A4F9C11CE043D55A7388D253B204479C9F42BA96463AE7ED99BA0A3CD193B9510940A9C3168F125B9B69E78EBEB52201C87F253F2A7280F15987E419EC556C4938DA10C7A6B033A16FE5C331AD00D74DAD58C3175A3C61422010AACDA2162F30DF01DC2ECF50603939C8711351326EE115541B2581A0B5C5DF0DE337891A9C05EE39137E93682A2ACA45E491235DF5D0182B017F8BEADDF3AF2F0E26939B3E1D7ED44DD38DF1DE83A58CE3A55AC93CDF5D862A470FC4BA8615E06D14468AB299DFC82C4EA5B3CAD7C649B1258B8179FBA471436DE445F9E3480DB4997558508AE0809353FB86DB67E17C8D21912E00F171EC32552D2395AF633AB48789536C0727B09D86D64204A2A194EC21C75E97A28F48C6C925F99342B492E2364349C34060092078CBD893C780562F50C32D969A0BCD51232D2DEBA660D8A1904D375D1F22708201E7FD26E69511595098B0E1B3797594B419AA681B7F1CC38810E52456F579C874C88075FE9828A821026EE87860BA4F5017FC062DA7229703B978448BC518A93F1792BFF563F81015EA0890030ED067691DB686ADE0C32A71A44A00D87B000A496F2A4E9ED4496AFC84F3B97EDB9908007A1B30278A899223A058263F5FAEABC34EB9E7F9325B6F2E90DD8DB6301FE04D6F2EA787139CDA6034138FE147C7E46A2280659CEFD7A7749BF44C2EDD72DA2BDA034CB60B531986258228431A363DAFAA8CECBA26D7101E3AD9603A476F517B0D5D7784B8DB254655EC3349AC4B657F139FA89F5E3F8A65E11D7135167348F76C9E97DDF00AC1238C391A9A87F2A9B7E4D603531FD1DB0C124D5138E3460730CCE7C781B4BC5549E64A635FF94ACBF92F4CF183272379233FFCDE641CE54F0166F07B2C43ECAC025DE54B87ED80247F9CFC4CFC998442FDE14E426B0B36E1BEA353AFCF2C7B55DE3AB29A6F0C5DB9B53F1A6F4C561A006D9AF5F1B4D48D8E37E2C47DABDA87C913D23032F3110D20FA74C4FC78052234C54E304C5E3247F083A91A6606C5054FD135847979E55378290121A2DA249531A9C6827577CB0E1B0B8F88170A4B63C2683159BB4EC058C6A6F146AC5E96917D70E878CD6AA0C21988F62345C6F033A794C31BD95A084979F4E902B4E4ABCDD51D22CBD468E9AD573188D897F95368330FA4585BD5AA8DA3B11F8EC17DD33B77D04FD59A547F734679AB32A847B82124C2B5F849D4FD0D04986B2EAA3ABC4484C4DE7C9A481FBCFF2762CB3E6B57E6F2201C5896ABAB2A7C46452A3571370262F4781ACE962F22B276A6C6A451EC1BB886930C3BE04337A1B0AF852AFE3571253B8BC728EF43FDFA509C991019FF8DBD30DA834D07F0BB08B8576A3696B0280CCAFF4E2A19F5515FE27C452E9E615B40103527CEB530FC13884736B25D60E4BD06DEC2554F06BFFEE99B8AB67534B16330AFD8F28A257D261E05464D4B07E7ABE356AFAE902145EBD8BAB054E0E185F8F46DFD27890EC68F91D7D03686FC312E8CF3E11D15E6C784AB09E750AD173874456798DDF225C5345DBA65FE21F71D92B015027AAB4B44C752EB1B80F422DA60510393A0D0BC5D267A304BA04F8C07777AAC4D002C95542A717D67E8A7737D303835F0043F7DBF4D9DD066AD9FC21679035E1C2167053E4A2CD290693E892BBB7FC2994130DDFD0EF47943EC160BFF6029477AA88B1E2A1EC58704D27E19555C9290CFFB4EED064CA5EA88962DD6A02052F7E2BD2887C7C24F8F6709DAA364550EF72D5D0F12E80368163CBA48E6BDC104CCC069880960611DA316EBE356F9B2D0AA81B414D7A6F5181819C3F14478A2A6B11D73A541E832A2709EA56BD2558CB07F81A0AC8CD1A197C54A2D833E716D622B365773D982D8C497B5B20A9A4DAD42E71FC3DA7734D2A72A97A00EACAAD119535F0DF5F7231BB851CF567FAD3E8A78A3B45484200F0F2D6FDA66256237E2C8D1BDEB1A1941C3426733A4EBB136C55C048A81A54849AB307EABCCDF0064E82E31BC39BE33D41F93900EE4464E3756BD9F8D18E84D8D44CEB96ADE729297FD7189B6173DBA445BE20D61E593CEC2378C11AEEEDB4E63BE1962EE0ACCBE77D4533E221BBFE762BD292E06B730B17FB9F5FCF292DB59A64458ADB5D5A4C2A9C4AB6CA99263060B38AA9A72DFFDA07EFF7368BAEBBB496622EBD76B72E4D1DCE28A018373B153C7C1E90707D851145B49EFDF23E0C323AA09B88F6ABBCCA9831BE0D728E86205FA0BAD80C3EDDB3DC17D29E597EE2A509394FEFD7A2AE52A079E1E4435A52E8D7EC353E7D81DB3C7F2F9037FBF366F491A3E6DEDB5B032A6D45BD084D66F8565F4E522518A5D4A48C7190B106FAF7AB4D8D807961392FB22C4F81B8E4654F652C8DC86DD3662306521C6281095348E5CD9C5638ED972983C63819FD16EE957AA989CF03D9F4A9E48B06EDC1B1BD0BE28C9A600D78BF78F6285EA30F4B876DD66121AD38765FDBA5D7963671C7DF9E1FD89F2F8CEE38D273CCFB63A5E0AE7B05F56A6BA836F5D9FA070F5E33B638938FBCACE99663C41E75678F08D98B259399805B69D259A5F99AE163F03F31B281CBD315CC81E54C1D83CE6010B3443D7303E915E53FB4B81484F4E8BF29E574946325473A1728784FE65AC1E1C3A3B494F3809BC28E9E300BD4FB6A082A4CC98EF3A76063FA6D606700958F17D09D8B0D27BBB9D25D6A8E17EB88EE32F205B0FDF96A9F3D968470D296AF823B62B049CB5F974F220EBFCE02AA6B6813A49FCF170C79A8F0DD6EF77D7A2CFD514735AAA69B19D5178FCF0CF8E16BB03B1750E4D19D611DD814B6477DF31829DFC60CB65E1549FCADB8560142B5C3D0DAB285F013BE2AE67036D966BC6A42409B872EBB4BF4C52560EDBDEC86490D585ED9EE46DED67A78A9E6632306ABDB54A3DF97BE6D220B44D859F74228B056D898D49C97F9A664B5DDE4F5FBA73D5C15D2766F5F6E561865F4C0BA2ACFD5F0B1514EF5764ED444A4C2C9BB6440E8DB9747EBAD5381A933E9E26CDC771768D4FB7EBCAA2029121E6CAC598BDAF9000E3560390BB47CEC056831AC7276CCC56F83E3ED31A09D3D254ACF5C3EAC3C49F9FBC414B1D8A77AA83ABD527B93DB2566A090E3E5F67E60501A939C6647C42290A1AD81F2A6B9C0D8274F1C39272334A320E8DDF368A36096BC282A9B012DCADFEB8FE91038C816AD31F338B210FDE447930F36A03936205A70BA69501EEFFCC3F87AADDA38F0BB04DEB611270BCA89CE4A656264238783CB572479AB9C9E694B2F66C4B6ADC05786B7C34CFFC244F7542A68E3E4AC80EF7B3A87BE5EFF3612251E69BA5F423D8919CCDD0394865F8D7280430625A40B104621361606BE37AC8316030ABDF1809FF4B442DD7AC9883A535FEB78B7F7FFECCB1206D8079799849402A93824320E012896A8A935B4191A9CC02E4F7C4CBAE40DF9F77FE2108B0CA26AC69309951B1CC1EA960D77E3521965692281462FFBC3DCEE71C3F67A0A9C4EF871D5B7A0906CD926587E60A079C0F73D9C7816EAD8CAC136BD2B8388AE7E555A08848C868F09405899174E378C567299DA504E462AF5FF1E669BBD6B10EFAF3B0197C74DB745D11A599621739B41AAE64E2DB42AAF561278B86188423CAEA2DC6FD915FF0C1773E46BF64E3670696A5CEFF7DA549B9E2282BEDAE14864E40C8855F24CB2236DBE4C19A45A5770906CB82AF7A5278BF70E1F6482F4D5F514AF911C3B73D244449ED6D87090EEAD82D3D33884AFD2C86AC3F94D6A2D0F50525BDD4EEDA62B2DB611B6C12327592F8B8848865BF0AE867F1EEF0C96B0FD3FFA5C9A1C5AC831194B9745351685512F23F9AA22411AF126052064756218074626F73C9A82127D021CF9654906B92EFACEEFEB8F79E209CF7FCCA6FBF997AD9FEAF4331A85F58A3AA4A0ACBB9145DADCB5B024517305F83504AC96B52B94181B0F6E8AFE5A32ACD47FBEF1BF35ABACA7B08312280AD2CE25A566A41C35FCF59E778B2282983AC3E76BBEA888CFF4015325BF7D72D73CE885F4BCE3D81E2CC477729A5AF96D382B9F2F78B805B0724456F840FE265D62CBA3D553FE05669FFB9B59D5CA446C27CD6ACDB09EFB4599474D243F7066D93304660ED7789B27D1C9D9D34AF8DCA8FC540A582FC9CEA9092D339FF54837F68C298688DE9658658116398FFC3682D2EB751959FD7743B6FCF59E393506A20A84929F28929369E76CD0170816E9B74312CE0FD31D638127C6C30734D4B10FAD40ECEF539C540839F1ACC4BE3DFF3AED468E52A2138525100CCA13E14B24C0B32211ED215CA79048B1749BE3AD1B35B31EB1C95BBFFA540E65D3A6922242F6AA0BA6842A5AC408E23E2F3C6E4838601FF9DAF69E3338BEC23D461449260B3CACDC0C5B0A9A12EA6ECDA473786A54840F9DF6C48BDD5953FC3FFBF29EE986270D5B22E7B783E90183C75E5571630D6A2D1C74DD775A9EB442C93352CCF18B03078E30E8C5EEC45C8D69F835C8AF8F23D657FD5EF2D3531047701B2F582C327997A7FA22E363461A9F13715F2FEF37221179209D8939DC30258EDF1D73AA107BD047A6E164F1DF3A65E7E339C77F9669DD9DF404E6802EAC46A035AA136D17DAED0826591D855ECE53CA3E9DF5DFF4BA321E3A4BBFF3302045D776FC81D0AC006996F76EC75A629173CB0875A6D409C3A71989197C4E8479C583EB8D92792501FC371E5BB5BA3805D8C4BBE3294B0CA06EC76B49DC6F9194C644D8FECA8D66FEC329D81A750487EBD25FF2E5F4C41A3B5C28B1BF15F599372369950E72FC9B34B7186FE129B9D0D23685ADFC3A564B53B0995616C5CA998D85787C3E8CB18DED5BB6ED426BF47E8591A2132EED99A980F0C211C17FD7068C853A8AA192A64D633C55A66CC1EA3C4C74074C255686B77589A938E344687BCE0A87E948C061A0ADF795F4B1E9695DF1836C2253BCC784C752393955AE77D3C6B8101F5D1F1078764278FC5C98F55C06D360BB5046AD691179B0909A4E77179DB2123E4ABA972F7A2EA58A0F4BAF3E5A5083C11C659D4883DEBB0ADD40AAAD8797199FF3A3FC981BCCC90D0907E3B61B9DD2527CBC64B2862FC1608915BB64F207238394EA81CE4EEC968E3BBA825A50949BA0690BCD7FB784A6EF1B8BB61F78FE9E41C344DC3A824CBFC62C5555C0D2A342EE851E2EEBBFC9779AE7B9BE2FEAC6FA3D784116B2F6DECC170BA19D4146CA1523425C2EC0F3CC7A5F8DDCFE341BA72A5908265176A3B0C53614313B0C81062A9841C67E2529BDC7838A9410E7B2541F867CA917CFC99E9526B81A801AD765E3235DF051FD0187C91B898446A2B8E2E48FE66AE64A12DDB112EB8A550C2906B407850927B04B69F991466C4B991549125C68B158FFF4F09E525C3E649DB21A672AD51E9904504BE263C9595B535108EC17E346A3E38F5F69890BF63802FC787333237527E7675C5D91AC7F8E69FF65E0DA29DF330D37602A8E6D98B9AA53A080F74D17871355205A719F75D56524B1F89CE712E07F7ACE1123F9D2882235E3B4D53B9A8F6B24CC94A37E5760F2AF6EEE140BA9B34CA4F1A7875459BE3DD2F1E38444DB01D88BC3EEF3B1E868C5F9F7B277CC47747BED5F4AEA00A1F7DF55FA79F65B52C2529AFF888C1E8C14CC15DAF288E80431ACA4DEE85A5AD027269E0D4F95843A3171022764F27923A812AF4784192A0319A5FCA648422EB8F4EE2D8FF1AA5F69154E227F96212923D1AE67832B11A28897F70C01D9437BB3663430DB21B0FD3E2BE76661ACEE8E6492BA81FF3349FCE4AFA5C0AE91EF1EFAF7223E9D7B395E6857909F6E3707DD96BFDD3F4039CC78415E98C20C50012C28AEBD4ED8E936A13B4076E0E68451CBA48974B13500EBFBD479F90965ED437949557CA8D76C535838F1A77E03455A5AC0BF7FC58A62984C24DE5F8B11AA84E02BF04199FF73D8656F94A3F1A627ED68E77AB8EDD2B8079B0179CAD358DC43DFA7D6B562B7DF9038AF9B6ABDE83BCBFC24E6683004B8B4B7BDE6C4E96FB1C54FB6BEC3E9414EA304AAF0EDA953A8B32693C5E24751FEEFBF40B806C176E4371F67899514203C894C6253BF03965A5C8525713508B1E892831D8BED145E8A75A79E20718CDBAF55A154C9F387FA70B1721E7EB6DFF5AB25FECDD77BB9B04C47AB7F63B4025ED6A891A569C9AB00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/MyriadPro-BoldCond cguidfix
/F1.1/MyriadPro-BoldCond renmfont
%RBIBeginFontSubset: MyriadPro-Regular
%!FontType1-1.0: MyriadPro-Regular 2.000%%CreationDate: 7/6/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (2.000) readonly def/FullName (Myriad Pro) readonly def/FamilyName (Myriad Pro) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /MyriadPro-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /space putdup 34 /colon putdup 35 /one putdup 36 /zero putdup 37 /m putdup 38 /five putdup 39 /two putreadonly def/FontBBox {-157 -250 1126 952} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF2E3C14A4A25ABB6822897674CC246CF675044A4EED97D2C3D31E81B3D2DBBF9F25826E38CF77B501BFCE42DA67C31F19653AEE88B2E2D0FDA272163DA545730D39726B89188CF1C4D05A1EC7B678BC6E2168B4C99D11B42208739E065976E22E388C440CDF8754E110DDEA39AEE3AF1E5158277BB2AB2EAA4FFD455BE28BE607BB27F1C14F21AD4C92B8E359547EF8FB654E893E4557F2341E616B5B57DD08ABD010FAE3F6F70A4EC4A55211D1A66D89110572F03C94C41A1141A656F4AE68916FCB6689C7E923F220BA8B6D9946EED0E30935887CBF66CF694C1A5E45FB69B3B2E76646957D12F1D62FA107EEAE2F3CB95682D3A32C8E4C9E2A173807A9A8636D146B6D3FD5A0F5C37E4D9E5028C838D5C88EC9EFF5F4AB7D8621D734DD2B1820EFF61DB65A309B45A34642BF3CC3B7F283B692F3CC4B11EB8FC500B144B754AD85869456FABA91CE34E3CFB50C1882727EB718D9C6FC35AF733EA540E5EF5D88C5163FA9FC919C1C5B1DFD0F2E3971075382058CD485DA83FA09A121D9ADF6D36FA0615DA01D1152844540E59C6E25928B5197C1AADA26F26EB215026267C2FF0861CA6379F6227FD7908AF16A287501F23C4E9DEA36BBAD7FEF68F8FDD4A436507E8649E454F80272FD60ECA2B6A86AED0C6ECBD61EFB2F5FE291A0AAEF9A4B69AEBD47B5E74713D6D629FF047024B0C72732569AD18E9EF60A36892158FF420C532D1841A1B60744FD39F51B87263FE484F3AE64BFFAA33CCFE4FBD22FE527F731AEAB552C56F6BD68EB70765A6E503DCC79680424EE01351CF0C872458635FD9433541C4E87BF6A8E5F9B0EB0D08C9F5EF4C7A11CD05D1B20D63A64CCA6E9A8A6DF751A3D9F7B96A815BF6B4E06BCFA3201DD45BF9C21385C515F503B73957306622301064E2C3EE1B442D4AC9B27950060AAA5C81BA48A4BF558C8C8F3CB616272C344CAC315BB91C00850C5D4BF816855E04370C28D50BB4321E71E84E4DDEB36E9AA7E6CF1A9761C10AD5B6EA7183588E4BD15464CBE8698CA9F7DB701B3F76E7AE005043F5C129E013A13EE0A08E55A6F318DDAF24DAC8DC0489109251D7708D8B11231740C3DB7C6060400D593D1D7DC11F59E88C891360810C5806A6BC66D53DC14BE95A4C870DAA5E2720AED940BB2E82522DBD27C277F84C5D93F77248DE3436B55B75244AD3D06804D8A7003BAF5DE283CEDD49E0AD7BFEE0F7839C3B16D6DAD07D20E05E023A1B70D6FCE41713AB8A48434B4957CA23204412222D68B85225CB31047B891B623AE4D04061BC5DE639A38EB7F9AA701C609FF5EA04FA2B34EB8F30932715990F55D122461D80DEC9C8095AA187ECE2DDE0C0F73CD0ACD03B1476439222A5AFD2435E8C0470DD51C6060CA0DBE6F753A964B08CE88F53460B5BB02CCDE8F8B3A5D4AAEFD44C69FD41F3339FA443CC6D01897A0ED6FE42AC7A651E5E9C0A80B5997486B5AFA1FD7EDB49C008E021990BD210305A5D8A3AA1AE159669E443123AB21AA8960F2BDFFE2A3496B7211735CDE2E8D8968985CEC3570496376AFDCA7ADC8C6D321FA92FC452EA87F7FE9ABFD57B9F75C81E6E7FD395CB8A785DA9544B39ECD66B2952D919345475D41C59599C3C0B37CA1C305E5C871084865181112CABF0EC04E81450DAD59DC5EB2D6818D98A1CD49CD61C3FCA1A9402BE5CEE0443296E22DCDABBFD40CCBD1F9C7660B8DA53BF9CADAF84DF9FC491246CF0CB23DAE04D904A59CE4F92F98962B10B0050E3229DF7E2E05DBDA8349DF2552406BDCAB04F30088807DB557DEC5809EB341C6928290F8250DACB1B7D7FC8F9960268AC9EFB96CD0872F60E3489635ABBC3A77851DDB7589D4BFBCBD95AD656AC9D59190E729AC509C453F7D51538F06FCDA9B359C6C62C9CE8015A887227A25BBCCEC8DFB953D546F3140ACE82D319D54E14B738234CBE21EEF2BC19D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10D85B9D314BC3AAD5A58C69E282F66A88B1FAD00E509B83B6B8824619EA6B70EB26C4FE3EAC902E20576EDAEB0C10D614B9F4F9440C148D0B7910664AB5A054EBF68F20ED6D36B63A34B2238658EDBCC95D1B1FCE589563211975722EFF1FE7109784FCA218E332ABB2D4A9D542C44C97CF3BACB5811DA60300AE89F268A909574B02266D0360105CC0D245E889AE4450B77D40FD1F249DEC32373C2D420563F2E72BD852CFFF7F5A2D0B81B298E66B62A7D8D5658D0A1BDE4E03B6A8FA89E45234B34068981DA03491103AB40AE2A96B89C930FE0919496474BA27200F22B5F5D3DA2604152BF3B0BAD48B380ABBC4CB2FABD5CC5730A26867944C3A81D6B881122E003AE1A06F1B51869982BACC9A37865919DA9D68355F4CB5B75388028C8CA61CB4143B89A9FA4D958671CF85CDC045A9D0682E876F5C8DF0BC936FD291804A65A19FDC1E86F3FD87419A5363B781BD9E150A3B6FA92A362FB60F1F4C6505835303793A4C6BBA3AE3E47CFCEFB4B7AEAFDDDEF2EE6F280B89C898C925CB0AB9104E9F56920BAFDDEA0ABBBC6A07488B771BA4AC6AD75A4908C29F3F1ADE6627B0C21A398A8A163E5CD53A68016F26375582902E118409D03F11BF7060FEB3EBA0136364A39B8909FEB34B6EC77C528F4AA30CA1830D9D0DF8593C7E0C8AB21A063C9FF6F4849C9ED340E3F71083360FC0AB905C82FDF4B37C4C685F880DE8CE83FCC7DE6E244ADA3AF049C6991C17D62E171A82277C2262FC3F09F9CC458CCAF5BCD01A4A2FD9C81D76D52417A94E0BDCF2818EA24C39B80D8B33396AF71B4B5F70690826BF1F9986471AF62D4B02A1EF779AF82DEB8D255FA1BCED385A6434124A261407F3886B36813B36E14A6373C246AB0C7665D4F7E3EA84FF65D8AB6D3D06082239FE30AD1B26079C6371F3D9ACC7E9F734F115EDC46A37B0692B2E6F43120DD96D7C01AA3C161FC61460926C8C54182287CF2E59FDD83B8B8D3502884F0CDA4155E602340848515CE5CD8D9AB6140F5F0BBFA59F598181EC6E859649F5AF04C98800DD325B152A8BD7B4DEC2C50369B61E7427BE24019BF679413D5E06C883FB90F2DA194EEB0E97034892BDAA3B3C44EB26B3999B032B6082505011BEFDB67980F081DDC3B883CD65B29F78B5A676626CAEA364C439F24F3D75AE3B94D73E904BF137865EF681660164987F70192A74DDB45FA3DB8C570A03B1534012C0DDE27172CFCF3D135F8EAF1A3FCF3C060A2576DC1077CDA1DFA31F9A87FBC13D075FDCDA5BC8D845A9B019963F624A7C2534105E4A6874DE8BC79EF4AAA8CF43A15BDB4F5C730ED4E96A1E48653BB44133BBEA4F749C284A5F7D4F261E7ED36C3CFD85C917F17B2927836EB51A828D5446FCF0F7F3BCC9C3CF23D37479358DA2F94FADFF68AF74D4555307E39EC48419785DB0B902E81FC22932EBA13F9EFB930FC4877841181F4A2B571FEA25F705C58D48E96A1D5F0FDC64BF36C44E6A57029D86087FA384DF8CB6555B9B9575E747EFEE75B642BB7C094839656F0B38EC65EEC9BBC6E2EBD23CA0BF9EA76150EC67532145E407942B1F32BF422C1573C0DB2833E6E58EAB49258C4D3E76A93E6229D48DA5A1EF5BD469333F4D8B3BE7063251F2E7F76263E583F53718EF709AF6F16E994BA4DA50999903427508112F8498AE360DC2B759C1281AFD1BBF8FC6AC512E8199BD0841A07C3CB1EE10D51979AABE76AEA59884F7A140BD0B58AD54A3967A023FFC32D1F80880FE4F572D0F1BA760BFE8142CA1DB3EC26784278705B431E7848E256A8547028D62D814F75A52740F5CA7E3A2D124761D651A7757B969C899659086C1D13F28825145BDAAC622F93C4094FC081BB654218A3F0A67B3EB17FFB340B2C05A96DF24718127ABDBFE7DBBD988734C3A76B030056409580247491FAD36ECDE697E5051C619ACF2BE92F343EF697EF3D7F8F1D6E80D1B8788779D23C0FB78F7099F49865999374951C65ED02330460EA41917C4EE73D471571C6CC39585969EC488618A4EBCF42D5C4F04AFC8E7E0C99115EB40C69F5B8E6B4B270597F360A4C605C0BD9CD1241DAB6638E763C6F37B84F29F53927A15AC229193D4C81112589D121C8EC57E2422A592CD56EE9A22022F0A71DCF3A58782016DBAEAEDBC7105DA2CF7736002D041EE208F1AB7C430B5036FA56BBE002044BCAE2E43A399430BD920F90C8045508652AA183E2005374AB37DD8DF43DA9157E9762D88B8541824A374A4BE71A684045A800026AE7BC06A501BDE136726418B4FE0D2277BC685487629692D69AB31CF0F7FF52115F55A26D5C3B44668180FE9243D3E0BB7B377661C41DDE6E736F59E930AEC86277ABCA94C91EA3F9986384C47A29D7BED12A16589B9D4C7CA074A81DC1D5034F9FC10277BEBF6F4C8669A64F4E64B8260FBFD58A24D1AF9BEFD6E93A8D5551E5E67364F6ADE46B81A2674580F6A0C77F5559E7010F67F89505C76696A37FE48F54DC83765F1592D5FF46AB65FCDD0AE2CABB599239A09F68318EE53D994103C5986E081A5E0940124338D79AABB64D154817B91B2BCF79F93488B48780843ABE363AF0091DF1E449E2571E14C484115C25A95F0ADA052825AD62E72E22BCB249A1C5A575395308295D1E06A905F355541F6F4EB6333D0DC969448B60736D69A14ED75B053DF587EEE27D779C861E098802564BA77E8D64D848AB91C331A49854DB5073A2BD55CEE720ADDCA04B8BBAE6D9C079C10EAA1C8E3A60202219006BD09B9DD8EBBA72CBB2C902366B81087A9194D3D9390AB7C8F745EB096A24969A46F6193F2E4304436244F0EF2E50A4B0642406D173C07A9B139A8EE751F8DB7586862A50766FF19088CF1647267EAF57BE5FF98A0D1489E42C45CB13F814C44380C991CBFB198F50E9C834EBF4C515DD0A8352B99C377167161ED46EB53EF3D4C2F9CE0498D5287D81EE2CF87E53B7715554C7215C1DA8449155BC519C11117DC571F15623DBE2FD22C163EBF2D1A1A7B33A407E6ED036399CBF17E3D460A84298D34A294A49B1C1ED28D342572D4DB730D9CAC2BF85CE8FA013005C479C50546799110F8C194C53557A9467DE6CC9581894473EC82D304C2DFCFAA18D381E651CA30E7A5238216CDAA35BC3E1967727C611B7BD8E6D24449946FF12037B284FBBBB7AF38D73D40333B6FDC6B4C2051F1F717A87623E0BC4C3B1781249972ACB94B26F2958E58D4962D8FB94A661A2FC944482E4E549A0792AB5FBAE1E7FF3B50CFE82DC98EB851824AE265DE6EFABA0171B278A3444567D5499BF3874473B1AFD116C540F8FF8D912BA767FB467202DBDBFD6BA45D077DAA64B4C8D6C25A9F2B1DF243398E76CF64B17E0A2A36E9130E9E403DA34E727C080B28F32C593DFBEEDE4071C25AA75E2C8F43C59E39C688A997C4E78811FEF5AD43C0564F5BE5DD36F4E2C953C3BB154E573615B6149E65D01AA766E46368965B3EE54D2E2D370FB1449ED84B4169EC3DEED6679964D00AEE7B64D2897ADBA76D7827EBF4108B6FF9E4D7F9F426CC8DFD61B56FDC2B4D1B52924D30D0DF716D58B19C1C70C429B23F6913CD1C37D0F1CB35AE42F34A05FA77A67B6842D7724F36125732DBB0A88BF39A884D8A5E8ECF017E49A77CC97ABAE8526E375523218B28F83D91E7F782EA5860FFEC8967CA814229AED8FDAA1E7132698CFDF209FC8473E94C8B1BFA11EB29F89AC66CBA0312A77339DCF382F9EAB323D69C2F9F30D0164834358F181983B430A0FE2E26D7EE04C9519DB9BAF4958193ACCAF24DD1B89053E91651EE286DCF45DD1E0EAB5BEA9E5A1051F58FC4C358B1DEE24265947261FE0B59F76D06C2FE8C9F472ABBD81BE4AC0DC66FB520E51314CE95DCDF6D2C643625F1020EBCD3DBEB192844BE3DA44AA765C65480D3562AFC49F2BB9E9C018A263D56FD7F0D391069E6C42A43803551FB85C7AEB6A4FBC32DC9DB638E4AAADD91114F772F1C8BF4831ACB77C08DC41BC1D23A010FF7B8C5B010892D856E4376A493E479463DE41141F3CECD2D4083C4692CBC7B9A9C3B6E2064C8983553FEA8B8A59705020FE6D9311115745B29D2ADE337AA1E77B169806C61D442056519B5E5FCDEC5A89897B43DBF4E4E44E10A507A52943E2137B1298B80707D488B04319E024422FD7D9DE2C10F0B6E7ABAB4830ACEA2679DC291358BA61379E2FDE8B01BE59F8AF04C9A33BE995559FC9FB9C8013C97A86E8C10D2C031074CA9D7A73DF4048851C3A7EB47A875CA6C107B4C6ED6F4D0082F3CC359744266E0A624CCCE48BB3030A5BB8A0B344F104E84860BC37FD790D77DB46B206F74341531B48EE1B0616EEB069BF2AB8F30F8841F2E7AA5D93631C1EDCD6ACE62245C9F739060CD35F1A9521FA920F5B746986A5A793CFF564AD852AE3B55E1BDBD74E2218230E17622B9F76EA851A910BB78DBEC924924C2D321E4078B0C8B222012F1EC0FCAF4CDBEDD2F66FC806217DABBB02E93AEC690CE698526F9D819D5A59C3130DC7B5AC3576DBBFDE5FC5A29190AF11C2664C313F723CA3377D3DA42687564027032FCD34C49EFC62CFE66C2B3FA786DEE3E880A0345E55BCB511D61EC181E02E830F46894419FFCA325B06C56AA75FED5B280E15D9B7C4BF37D90E45032BCBC80CE6DF25DE87299E1A41FDCF058D0C74A4DF7E6E7260D333E1CF582ADAAAF96B053E6657A5537B0CECC2479EFE2D97910801C2747899E3C79097B0C1CE81239C280795231C14E879F4331414197D639C797E69177A141603C3FC63C7201E6EC3829A98843C6FA52A70B99AE181C935034504C630F47A0C3AC29C9AF6D84D8AC4E42087E1D7CA4CBD8CA6AED4E915786DBC21CA754E5C53E7082A2420B874798D7CF8854BAB52B07ED13C5CFAD1FAA6D3538BE25FF1DA08D37DB09DB27B5A2788A39AF503D2164299AFC5D14A07BFFF37942591967C795679A40AFF0D40B708A82339A3636B3887EF84C8CBE95ABDACE60BE806FBAC32FDAB05D458D5E8C5189891FC16691D7EDE772B5B8370D6D90E3856593577951FCF03BA5F452EFDB97B5305FD9B3929B346A4BAA8B4DD19208C45D241E59AE191F4D8BF303F92DFF4E2506039C45C926252045A8AE103E0D4AB47FB32B1EA3C5E77A2F273406A14DBA72D0D484CF006F559C114020ACA0BCB343C3227D234353EAC653D8495A75D14B365105EA2326F1AA38500B4176C7787C6D0895F5DCC607D07C937198E43D4CD5E50EE62D5FA4FA71A4002A18E413137E8708BB45FF82824E92423390C66B5AD9B59AA2E336B06A43CBA86D4E9311A01F70F776D86AB54D6DB63142070FE8DF28E5C7EAD2AAE338AFFE6776EF3F720BE5F86205F4C152ABFE489D4A84D5FE335DAEB7CFB7BE086885111D8D8AEFAB95D6B96DFD44044AE28C758666819C2522A7F4FFCA423B0E54F5AB4754B8D8DA09E752FC5F2EC74EB8CED9BEC13F2EF8034853465FD92925091480A7685A6B6DC5E2FE3EED3C88E7A79CB20DD7909B288D85FEA79ED06415FB2720A435BDC09843808D640FB00481F0A17D4F0C5618596CDB50F3FD5B602ED6C3A565CD66601B127E4BD6A042909F66FC0F835A4399E33447848F7D0F3DB0D861950F7E3B10743BF6305C96D57B8653E06C6B3E83C118AE8E2F47847F2C26603E0EF8C72F9FE00782C0F04CA8B6ED412E0E76179F4318ECBC251C8F00D6BDD8D77175E183A93DC715D8E9743280D1DD4A134B07A9865A0B027669198A8B889460D11B0B04C92F4A1D09E79CEA61A60618AA34C166B53E39078794E8EC598322FE1003C2D111A3AA18010A0D284EC43E2B59B9EE34AE69566D01AD23A05584F526A967C4FDB8E02550C37553562528A022E706756364EAB0C8225BB2045E854016F758EB987E5FAC1757F88CD7A8DEFF08326E3704B2F51B60F9C5295565F35401B51DCF7C3CBCBF88DF5852667782A429DBECDDB468ECF8D70B6E43742DA1D1DFD00E319164EF9F57F643964AE3FF69A5B21BB2F3468D792C5529C329F4B9FB8DCCF55E5AEAEA8CB799FDD9AA535A0417EEF834DF19FEA4A4D80081089E7926F4B7A2FB74482563082F61C1D7913323D68E20E43C99F0C57FC30190D3F688C567ED9D4C6A784C090D198A689B38585E05D91142F9B01F41F7C5F6FC5F43EFA9F29101F17607FEB9A71836B15EED9B166D4EFF9411DC0E2DCD2AE8EF43C4933AFA30B4FB01CEC65F59EB53D33D00EAEABE30EE1644DB1EAA0940C2E0A360373E7BCA86F71A3B31B594CCF906E95C6B6F820BBAF867A29A8186E7CF623A14E819F22004BCBD528F7B9EC592F01F9769FF618F807204B3219B531A95D7FBA3FC83D83AA3120AB717DF8AC2CB4704F59E9F113264EC733181366D1DC74AB2CFDE8DFBAA8FE25837FE21D157C3DD4F812AAAC3D34172433CC6526994959AE8254FC581C231BDCB351401795F04982566534DB52F7F627377C1E3D01EDF8BFF1499AE4CEF18F1369B7356D27056ED57B6B87501E0D49E60859E7B4181E1CE2E00AAA8196088E6DD25AB7B572930D03CCD029C86F511E8AFC9843A15CE65627F6A8127F480DB722E01CBBCFD31FFF64E320DC5D3AD5FDDB40B86CC4E4AE64C608EEE8A8DD9FABFBBE1AA4C785C7DCB78D8C6A9F6FF2E5C543B6EBAEC2793A37BFE488709B0DCE55962E7469DBB7655E3CA3485E00B09E2ACE51C07B7298339933602F24E3ED52C5DDD768272033FF9E3B7A505394FACAE74B93452BEC8A950BF561A512CA3AA6C50684EA6FB63884AD4AE2B55013064D322CC93EE70671FFA8B0D44EC7D18A2B6BEB6F376DFD7A28721A116AD1EAE047B3EB1DB7C5C4078600BEBC91F55EADEF4C65BF9687068911F6BABF3E4981A65F19E32C59D4C184843482101769DDC1F1A08EEE4FD1738C0E7E3639B5E69F3C566B8DAC9B7EF8D37785CA06E0D561D10FBDAD746CF022FE6265FCE4CD020C74FB12C4DB947DE8F417E449541B7556BEF2B4BADBC6E983FCF001E017982AB1E4645EB7D12716A610D484421DB6195005A61002FD1944FCC03F8B3832439339E4604A94DBF80A260E2086BECCCA6FDE35A571DF5EA7DEEA29B6D99E34FD9414F4D061E7BC31A6C2C036C247A248F557C2DB58E2B2503AFF4C382220D656809E697F076155871F8BF6B6BBD8C0181FCF8C6D172441210DD61EC0B91FEA08D2A0093B1C31C3E8DC5CBB6E7A44AB26DB14B097E26763314F2FBFD86BA09955726F1DFCA03745961EC26DF2A721FAC4F5AB63BE6172809A777BC5D855A03CC60AF02C58110BF2BD170FEAC13F4E9B6396655EA0FEC537A3A234074823A4A275CBA78A4F0B263AD01FBCDBA3484460B2AE7B408101997312006CBB5E610AEAE47B4015A00278E56A6D3A36D1A94BFE96A3295F4440188908382A3F7CB8EAEC2AFD21E1C35473CD737C292860BA05C30BE5C40B4CA89110059CC2BEAD0BD3D5C085C833CC00932E400BE643166E9F71C914B6FFB7A264E6474F21FF636E573ECC14FABF951D0806C3F8288EE7F79560B1203AFD011B637552D2D8E8391C67535BF1C0A419433BD8C4FA72691CD2305B1C1244304606C262F3D078F1989FDFDADBDA0BBA4813D4DA5D3DA1ACF6CF5E50A55B745327351FADCE7BB95CC69F74481F3E9DA125E258672072961F2A5D3A961435AF14256413849604BC6B1FA78368B17187C01767D9B3CE3F3E36498DF19BD89E98FDAED13C04989EB63022BDBB0C1A1C97A4210397592531313747536F23A490494847C783CF725D26521C5F536129AA88DE499B9CDED7CDDCBA0321CBFF17F6363529AF4FCC0E94471EFF97AC9C416ACBE826BF154973514B49B65EA28A2E25305E2AA5FD963682A24DEC04376F305EE6747AB795670F5E69A7E0B8331CA14EF8277E672FBFBBE5D0939231A32F0EA4FB2BFC2B482C1C4CFB9B3BF4294771302C0AF0EA6606600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/MyriadPro-Regular cguidfix
/F2.1/MyriadPro-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1395 1020 rc
0 1020 m
1395 1020 l
1395 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1788 2554 m
3544 2554 l
3544 -1950 l
-1788 -1950 l
h
-1788 2554 m
f
0 1019.25 m
1395 1019.25 l
1395 0.25 l
0 0.25 l
h
0 1019.25 m
f
/Cs3 SC
0 sc
1 0 0 -1 -247 1130 cm
/F1.1[ 16 0 0 -16 0 0]sf
910.55603 137.5 m
(!"#$%&#'\(\)*)[ 7.856000 7.232000 3.968000 6.576000 7.328000 7.520000 3.968000 7.104000 3.728000 6.304000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
139 902.25 m
828.89026 902.25 l
828.89026 779.5722 l
139 779.5722 l
h
139 902.25 m
f
1 J
1 j
0.60000002 i
/Cs4 SC
0 0 0 sc
1 0 0 -1 -247 1130 cm
386 227.75 m
1075.8903 227.75 l
1075.8903 350.4278 l
386 350.4278 l
h
386 227.75 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 40 0 0 -40 0 0]sf
634.7251 295.0889 m
(#+,&')[ 9.920000 20.640000 15.720000 18.800000 0.000000 ] xS
/F2.1[ 40 0 0 -40 0 0]sf
719.0451 295.0889 m
(!"!#$!%)[ 8.480000 8.280000 8.480000 20.520000 20.520000 8.480000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
139 736.66943 m
828.89026 736.66943 l
828.89026 613.99164 l
139 613.99164 l
h
139 736.66943 m
f
0.60000002 i
/Cs4 SC
0 0 0 sc
1 0 0 -1 -247 1130 cm
386 393.33057 m
1075.8903 393.33057 l
1075.8903 516.00836 l
386 516.00836 l
h
386 393.33057 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 40 0 0 -40 0 0]sf
627.74512 460.66943 m
(-,./010)[ 20.600000 15.720000 25.480000 15.200000 6.360000 17.040000 0.000000 ] xS
/F2.1[ 40 0 0 -40 0 0]sf
734.50513 460.66943 m
("!)[ 8.280000 0.000000 ] xS
751.26514 460.66943 m
(#&)[ 20.520000 0.000000 ] xS
792.30511 460.66943 m
(!%)[ 8.480000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
139 571.08887 m
828.89026 571.08887 l
828.89026 448.4111 l
139 448.4111 l
h
139 571.08887 m
f
0.60000002 i
/Cs4 SC
0 0 0 sc
1 0 0 -1 -247 1130 cm
386 558.91113 m
1075.8903 558.91113 l
1075.8903 681.58887 l
386 681.58887 l
h
386 558.91113 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 40 0 0 -40 0 0]sf
641.52515 626.25 m
($**02)[ 15.800000 15.760000 15.760000 6.360000 0.000000 ] xS
/F2.1[ 40 0 0 -40 0 0]sf
712.24512 626.25 m
(!"!'$!%)[ 8.480000 8.280000 8.480000 20.520000 20.520000 8.480000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
139 405.50833 m
828.89026 405.50833 l
828.89026 282.83057 l
139 282.83057 l
h
139 405.50833 m
f
0.60000002 i
/Cs4 SC
0 0 0 sc
1 0 0 -1 -247 1130 cm
386 724.49164 m
1075.8903 724.49164 l
1075.8903 847.16943 l
386 847.16943 l
h
386 724.49164 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 40 0 0 -40 0 0]sf
663.08514 791.83057 m
(3*)[ 11.840000 0.000000 ] xS
/F2.1[ 40 0 0 -40 0 0]sf
690.68512 791.83057 m
(!"!'$!%)[ 8.480000 8.280000 8.480000 20.520000 20.520000 8.480000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
139 239.92778 m
828.89026 239.92778 l
828.89026 117.25 l
139 117.25 l
h
139 239.92778 m
f
0.60000002 i
/Cs4 SC
0 0 0 sc
1 0 0 -1 -247 1130 cm
386 890.0722 m
1075.8903 890.0722 l
1075.8903 1012.75 l
386 1012.75 l
h
386 890.0722 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 40 0 0 -40 0 0]sf
655.6651 957.41107 m
(,\)*,)[ 15.720000 15.760000 15.760000 0.000000 ] xS
/F2.1[ 40 0 0 -40 0 0]sf
718.62512 957.41107 m
(!"!&!%)[ 8.480000 8.280000 8.480000 20.520000 8.480000 0.000000 ] xS
0.60000002 i
/Cs4 SC
0 0 0 sc
730.94513 350.4278 m
730.94513 383.43054 l
S
0 i
CM
483.94513 738.56946 m
486.94513 746.56946 l
480.94513 746.56946 l
h
483.94513 738.56946 m
f
0 J
0 j
1 0 0 -1 -247 1130 cm
730.94513 391.43054 m
733.94513 383.43054 l
727.94513 383.43054 l
h
730.94513 391.43054 m
S
1 J
1 j
0.60000002 i
730.94513 516.00836 m
730.94513 549.01111 l
S
0 i
CM
483.94513 572.98889 m
486.94513 580.98889 l
480.94513 580.98889 l
h
483.94513 572.98889 m
f
0 J
0 j
1 0 0 -1 -247 1130 cm
730.94513 557.01111 m
733.94513 549.01111 l
727.94513 549.01111 l
h
730.94513 557.01111 m
S
1 J
1 j
0.60000002 i
730.94513 681.58887 m
730.94513 714.59167 l
S
0 i
CM
483.94513 407.40836 m
486.94513 415.40836 l
480.94513 415.40836 l
h
483.94513 407.40836 m
f
0 J
0 j
1 0 0 -1 -247 1130 cm
730.94513 722.59167 m
733.94513 714.59167 l
727.94513 714.59167 l
h
730.94513 722.59167 m
S
1 J
1 j
0.60000002 i
730.94513 847.16943 m
730.94513 880.17224 l
S
0 i
CM
483.94513 241.82779 m
486.94513 249.82779 l
480.94513 249.82779 l
h
483.94513 241.82779 m
f
0 J
0 j
1 0 0 -1 -247 1130 cm
730.94513 888.17224 m
733.94513 880.17224 l
727.94513 880.17224 l
h
730.94513 888.17224 m
S
/Cs2 SC
1 1 1 sc
CM
1244.981 634.73096 m
1314.0065 565.70587 1314.0065 453.79413 1244.981 384.76901 c
1175.9558 315.74353 1064.0442 315.74353 995.01904 384.76901 c
925.99353 453.79413 925.99353 565.70587 995.01904 634.73096 c
1064.0442 703.75647 1175.9558 703.75647 1244.981 634.73096 c
f
1 J
1 j
0.60000002 i
/Cs4 SC
0 0 0 sc
1 0 0 -1 -247 1130 cm
1491.981 495.26901 m
1561.0065 564.29413 1561.0065 676.20587 1491.981 745.23096 c
1422.9558 814.25647 1311.0442 814.25647 1242.019 745.23096 c
1172.9935 676.20587 1172.9935 564.29413 1242.019 495.26901 c
1311.0442 426.24353 1422.9558 426.24353 1491.981 495.26901 c
S
/Cs1 SC
0 sc
0 i
/F1.1[ 40 0 0 -40 0 0]sf
1232.54 626.25 m
(4&\)56+,%*)[ 18.280000 18.800000 15.760000 18.880000 20.000000 20.640000 14.360000 18.320000 0.000000 ] xS
/F2.1[ 40 0 0 -40 0 0]sf
1393.34 626.25 m
(!"!#$!%)[ 8.480000 8.280000 8.480000 20.520000 20.520000 8.480000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
